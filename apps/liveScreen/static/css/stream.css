* {
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

:root {
  --color-blue: #003049;
  --color-red: #d12727;
  --color-yellow: #fcbf49;
  --color-blue-grey: #3f5a69;
  --in-out-animation-time: .6s;
  --delay-step-size: .05s;
}

html {
  font-family: Roboto, Calibri;
  /* background: #aaa; */
}

/* cyrillic-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu72xKOzY.woff2)
      format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,
    U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu5mxKOzY.woff2)
      format('woff2');
  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu7mxKOzY.woff2)
      format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu4WxKOzY.woff2)
      format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu7WxKOzY.woff2)
      format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu7GxKOzY.woff2)
      format('woff2');
  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,
    U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Roboto'), local('Roboto-Regular'),
    url(https://fonts.gstatic.com/s/roboto/v19/KFOmCnqEu92Fr1Mu4mxK.woff2)
      format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
    U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215,
    U+FEFF, U+FFFD;
}

main {
  position: fixed;
  bottom: 3rem;
  left: 0;
  /* background: #fff; */
  max-width: 40%;
}

/* main::before {
  content: "";
  position: absolute;
  top:0;
  right:0;
  width: 1rem;
  height: 100%;
  border-left: 1rem solid var(--color-yellow);
  background: var(--color-red);
  border-right: 1rem solid var(--color-blue);
  transform: translate(100%) skewX(-7deg);
} */

h1 {
  font-size: 1.75rem;
}

h2 {
  font-size: 1.5rem;
  font-weight: 100;
}

.blue,
.red,
.yellow {
  position: absolute;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
  transform: translate(-120%) skew(-7deg);
  background: var(--color-blue);
  transition-delay: calc(var(--delay-step-size) * 3);
}

.red {
  right: 1rem;
  background: var(--color-red);
  transition-delay: calc(var(--delay-step-size) * 2);
}

.yellow {
  right: 2rem;
  background: var(--color-yellow);
  transition-delay: calc(var(--delay-step-size) * 1);
}

.red, .yellow, .blue, .content{
  transition-property: transform;
  transition-duration: var(--in-out-animation-time);
  transition-timing-function: ease-in-out;
}

main.active .red,
main.active .yellow,
main.active .blue {
  transform: skew(-7deg);
}

main.active .blue {
  transition-delay: .0s;
}

main.active .red {
  transition-delay: calc(var(--delay-step-size) * 1);
}

main.active .yellow {
  transition-delay: calc(var(--delay-step-size) * 2);
}

main.active .content {
  transition-delay: calc(var(--delay-step-size) * 3);
  transform: translate(0%);
}

.content {
  position: relative;
  padding: 0.5rem 4rem 0.5rem 1rem;
  transform: translate(-120%);
  z-index: 1;
  transition-delay: 0;
}
.content::before{
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0px;
  right: 3rem;
  transform: skew(-7deg);
  background: #fff;
  z-index: -1;
}